/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.algebra.appdesign;

import java.util.Objects;
import hr.algebra.model.Actor;
import hr.algebra.model.Director;
import hr.algebra.model.Person;
import java.util.ArrayList;
import java.util.List;
import hr.algebra.DAL.Repository;
import hr.algebra.DAL.RepositoryFactory;
import hr.algebra.DAL.sql.DataSourceSingleton;
import hr.algebra.DAL.sql.SQLRepository;
import hr.algebra.utils.MessageUtils;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author frank
 */
public class EditPerson extends javax.swing.JPanel {

    private Repository repository;
    private DefaultListModel<Person> personListModel = new DefaultListModel<>();
    private DefaultListModel<Actor> actorListModel = new DefaultListModel<>();
    private DefaultListModel<Director> directorsListModel = new DefaultListModel<>();
    
    public EditPerson() throws Exception {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listDirectors = new javax.swing.JList<>();
        lblDirectors = new javax.swing.JLabel();
        lblActors = new javax.swing.JLabel();
        btnRefresh = new javax.swing.JButton();
        lblFirstName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblLastName = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        rbtnActor = new javax.swing.JRadioButton();
        rbtnDirector = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listActors = new javax.swing.JList<>();
        btnAddPerson = new javax.swing.JButton();
        btnDeletePerson = new javax.swing.JButton();
        btnDeleteAll = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblBackground = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 172, 229));
        setMinimumSize(new java.awt.Dimension(1020, 700));
        setPreferredSize(new java.awt.Dimension(1020, 700));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 102));
        jLabel1.setText("Person Manager");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, -1, -1));

        listDirectors.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        listDirectors.setForeground(new java.awt.Color(0, 51, 102));
        jScrollPane2.setViewportView(listDirectors);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 370, 330, 230));

        lblDirectors.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblDirectors.setForeground(new java.awt.Color(0, 51, 102));
        lblDirectors.setText("Directors");
        add(lblDirectors, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 350, -1, -1));

        lblActors.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        lblActors.setForeground(new java.awt.Color(0, 51, 102));
        lblActors.setText("Actors");
        add(lblActors, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, -1, -1));

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 610, -1, -1));

        lblFirstName.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        lblFirstName.setForeground(new java.awt.Color(0, 51, 102));
        lblFirstName.setText("First Name:");
        add(lblFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 110, -1, -1));
        add(txtFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 130, 296, -1));

        lblLastName.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        lblLastName.setForeground(new java.awt.Color(0, 51, 102));
        lblLastName.setText("Last Name:");
        add(lblLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 170, -1, -1));
        add(txtLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 190, 296, -1));

        lblTitle.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 51, 102));
        lblTitle.setText("Title:");
        add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 230, -1, -1));

        rbtnActor.setBackground(new java.awt.Color(241, 241, 241));
        rbtnActor.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        rbtnActor.setForeground(new java.awt.Color(0, 51, 102));
        rbtnActor.setText("Actor");
        rbtnActor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnActorActionPerformed(evt);
            }
        });
        add(rbtnActor, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 260, -1, -1));

        rbtnDirector.setBackground(new java.awt.Color(241, 241, 241));
        rbtnDirector.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        rbtnDirector.setForeground(new java.awt.Color(0, 51, 102));
        rbtnDirector.setText("Director");
        rbtnDirector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnDirectorActionPerformed(evt);
            }
        });
        add(rbtnDirector, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 300, -1, -1));

        listActors.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        listActors.setForeground(new java.awt.Color(0, 51, 102));
        listActors.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listActors.setFocusable(false);
        jScrollPane1.setViewportView(listActors);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 330, 230));

        btnAddPerson.setText("Add");
        btnAddPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPersonActionPerformed(evt);
            }
        });
        add(btnAddPerson, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 340, -1, -1));

        btnDeletePerson.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDeletePerson.setText("Delete");
        btnDeletePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePersonActionPerformed(evt);
            }
        });
        add(btnDeletePerson, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 430, -1, 36));

        btnDeleteAll.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDeleteAll.setText("Delete All");
        btnDeleteAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAllActionPerformed(evt);
            }
        });
        add(btnDeleteAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 430, -1, 36));

        jPanel1.setBackground(new java.awt.Color(249, 249, 249));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 102), 1, true));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 100, 320, 380));

        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/mainApp_bckg.jpg"))); // NOI18N
        add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 700));
    }// </editor-fold>//GEN-END:initComponents

    private void rbtnActorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnActorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnActorActionPerformed

    private void rbtnDirectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnDirectorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnDirectorActionPerformed

    private void btnDeletePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePersonActionPerformed
        Person actor = (Person) listActors.getSelectedValue();
        Person director = (Person) listDirectors.getSelectedValue();
        try {
            if(actor == null && director == null)  {
                MessageUtils.showErrorMessage("Delete error!", "Nothing is selected!");
                repository.deletePerson(actor);
            } if (actor == (null)) {
                repository.deletePerson(director);
            } if (director == null) {
                repository.deletePerson(actor);
            } else {
                repository.deletePerson(actor);
                repository.deletePerson(director);
            }

        } catch (Exception ex) {
            Logger.getLogger(EditPerson.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            initForm();
        } catch (Exception ex) {
            Logger.getLogger(EditPerson.class.getName()).log(Level.SEVERE, null, ex);
        }
      
    }//GEN-LAST:event_btnDeletePersonActionPerformed

    private void btnAddPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPersonActionPerformed
        String firstname;
        String lastname;
        if (rbtnActor.isSelected() && rbtnDirector.isSelected()) {
            try {
                firstname = txtFirstName.getText();
                lastname = txtLastName.getText();
                Actor actor = new Actor(firstname, lastname);
                Director director = new Director(firstname, lastname);
                repository.createActor(actor);
                repository.createDirector(director);
            } catch (Exception ex) {
                Logger.getLogger(EditPerson.class.getName()).log(Level.SEVERE, null, ex);
            }          
        } else if (rbtnDirector.isSelected()) {
            try {
                firstname = txtFirstName.getText();
                lastname = txtLastName.getText();
                Director director = new Director(firstname, lastname);
                repository.createDirector(director);
            } catch (Exception ex) {
                Logger.getLogger(EditPerson.class.getName()).log(Level.SEVERE, null, ex);
            }         
        } else if (rbtnActor.isSelected()) {
            try {
                firstname = txtFirstName.getText();
                lastname = txtLastName.getText();
                Actor actor = new Actor(firstname, lastname);
                repository.createActor(actor);
            } catch (Exception ex) {
                Logger.getLogger(EditPerson.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            MessageUtils.showInformationMessage("Info", "Please choose job type!");
        }
        clearForm();
        try {
            initForm();
        } catch (Exception ex) {
            Logger.getLogger(EditPerson.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddPersonActionPerformed

    private void btnDeleteAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAllActionPerformed
        try {
            if (MessageUtils.showConfirmDialog("Warning!", "Do you want to delete all persons?") == JOptionPane.YES_OPTION) {
                repository.deleteAllPersons();
                initForm();
            } else {
                initForm();
            }
            
        } catch (Exception ex) {
            Logger.getLogger(EditPerson.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteAllActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        try { 
            initForm();
        } catch (Exception ex) {
            Logger.getLogger(EditPerson.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPerson;
    private javax.swing.JButton btnDeleteAll;
    private javax.swing.JButton btnDeletePerson;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblActors;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblDirectors;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JList<Actor> listActors;
    private javax.swing.JList<Director> listDirectors;
    private javax.swing.JRadioButton rbtnActor;
    private javax.swing.JRadioButton rbtnDirector;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    // End of variables declaration//GEN-END:variables

    private void fillForm(Person person) {
        clearForm();
        txtFirstName.setText(person.firstName);
        txtLastName.setText(person.lastName);
    }

    private void clearForm() {
        txtFirstName.setText(" ");
        txtLastName.setText(" ");

    }
    
    private void initRepository() throws Exception {
        repository = RepositoryFactory.getRepository();
    }

    private void initForm() throws Exception {
        List<Person> actorsList = new ArrayList<>();
        List<Person> directorsList = new ArrayList<>();
        
        List<Actor> actors = repository.selectActors();
        
        List<Director> directors = repository.selectDirectors();
        
        actorsList.addAll(actors);
        directorsList.addAll(directors);

        actorListModel.clear();
        actorsList.forEach(Actor -> actorListModel.addElement((Actor) Actor));
        listActors.setModel(actorListModel);
        
        directorsListModel.clear();
        directorsList.forEach(Director -> directorsListModel.addElement((Director) Director));
        listDirectors.setModel(directorsListModel);
        
    }
    
    private void init() throws Exception {
        initRepository();
        initForm();
    }

}
